<!DOCTYPE html>
<html lang="zh-Hant">
<head>
<meta charset="UTF-8">
<title>二氧化碳排放計算器</title>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.28/jspdf.plugin.autotable.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<link href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC&display=swap" rel="stylesheet">
<style>
body { font-family: 'Noto Sans TC', sans-serif; margin: 30px; background: #f4f6f8; color:#2c3e50; }
h2 { color: #2c3e50; margin-bottom: 10px;}
.card { background: #fff; padding: 20px; border-radius: 12px; box-shadow: 0 4px 12px rgba(0,0,0,0.1); margin-bottom: 25px;}
.item { margin: 10px 0; }
input, select { padding: 6px 10px; margin-left: 10px; border:1px solid #ccc; border-radius:6px; }
button { margin:5px 5px 0 0; padding: 10px 18px; border:none; border-radius:8px; cursor:pointer; color:#fff; font-weight:bold; background: linear-gradient(45deg,#3498db,#27ae60); transition:0.3s;}
button:hover { filter: brightness(1.1);}
.result { margin-top: 15px; font-size: 18px; font-weight:bold; color:#e74c3c; }
table { margin-top: 15px; border-collapse: collapse; width: 100%; max-width: 720px; background:#fff; border-radius:8px; overflow:hidden;}
table, th, td { border:1px solid #ddd; }
th, td { padding: 10px; text-align: center; }
th { background:#3498db; color:#fff;}
#chart-container, #history-chart { margin-top: 25px; max-width: 720px; background:#fff; padding:15px; border-radius:12px; box-shadow:0 4px 12px rgba(0,0,0,0.08);}
</style>
</head>
<body>

<h2>二氧化碳排放計算器</h2>

<div class="card">
  <h3>📅 設定期間</h3>
  <div class="item">
    年度
    <select id="year"></select>
    月份
    <select id="month">
      <option value="1">1 月</option>
      <option value="2">2 月</option>
      <option value="3">3 月</option>
      <option value="4">4 月</option>
      <option value="5">5 月</option>
      <option value="6">6 月</option>
      <option value="7">7 月</option>
      <option value="8">8 月</option>
      <option value="9">9 月</option>
      <option value="10">10 月</option>
      <option value="11">11 月</option>
      <option value="12">12 月</option>
    </select>
  </div>

  <h3>💧 輸入用量</h3>
  <div class="item">電力 (度) <input type="number" id="electricity" value="0"></div>
  <div class="item">水 (度) <input type="number" id="water" value="0"></div>
  <div class="item">柴油 (L) <input type="number" id="diesel" value="0"></div>
  <div class="item">車用汽油 (L) <input type="number" id="gasoline" value="0"></div>
  <div class="item">燃料油 (L) <input type="number" id="fuelOil" value="0"></div>
  <div class="item">天然氣 (m³) <input type="number" id="ng" value="0"></div>
  <div class="item">液化石油氣 (L) <input type="number" id="lpg" value="0"></div>

  <button onclick="calculate()">計算排放量</button>
</div>

<div class="card">
  <div class="result" id="result">總排放量：0 KgCO₂e</div>

  <table id="details">
    <thead>
      <tr><th>項目</th><th>用量</th><th>排放量 (KgCO₂e)</th></tr>
    </thead>
    <tbody></tbody>
  </table>

  <div id="chart-container">
    <canvas id="emissionChart"></canvas>
  </div>
</div>

<div class="card">
  <h3>📊 歷史紀錄</h3>
  <table id="historyTable">
    <thead><tr><th>期間</th><th>總排放量 (KgCO₂e)</th></tr></thead>
    <tbody></tbody>
  </table>

  <div id="history-chart">
    <canvas id="historyChartCanvas"></canvas>
  </div>
</div>

<div class="card">
  <button onclick="exportExcel()">匯出 Excel (單月)</button>
  <button onclick="exportPDF()">匯出 PDF (單月)</button>
  <button onclick="exportHistoryExcel()">匯出 Excel (歷史)</button>
  <button onclick="exportHistoryPDF()">匯出 PDF (歷史)</button>
  <input type="file" id="importFile" accept=".xlsx,.xls" onchange="importHistoryExcel()" style="margin-left:10px;">
  <label for="importFile" style="cursor:pointer; color:#2980b9;">📥 匯入 Excel (歷史)</label>
</div>

<script>
// 初始化年份
(function() {
  const yearSelect = document.getElementById("year");
  const currentYear = new Date().getFullYear();
  for(let y=currentYear; y>=currentYear-10; y--){
    let opt=document.createElement("option"); opt.value=y; opt.textContent=y;
    yearSelect.appendChild(opt);
  }
  yearSelect.value=currentYear;
})();

// CO2 排放係數
const emissionFactors = {
  electricity: 0.474,
  water: 0.156,
  diesel: 2.606,
  gasoline: 2.322,
  fuelOil: 3.114,
  ng: 2.204,
  lpg: 1.519
};

let history = JSON.parse(localStorage.getItem("co2History") || "[]");

function calculate() {
  const year = document.getElementById("year").value;
  const month = document.getElementById("month").value;

  const data = {
    electricity: parseFloat(document.getElementById("electricity").value) || 0,
    water: parseFloat(document.getElementById("water").value) || 0,
    diesel: parseFloat(document.getElementById("diesel").value) || 0,
    gasoline: parseFloat(document.getElementById("gasoline").value) || 0,
    fuelOil: parseFloat(document.getElementById("fuelOil").value) || 0,
    ng: parseFloat(document.getElementById("ng").value) || 0,
    lpg: parseFloat(document.getElementById("lpg").value) || 0
  };

  const detailsTbody = document.querySelector("#details tbody");
  detailsTbody.innerHTML = "";

  let total = 0;
  for (let key in data) {
    let emission = (data[key] * emissionFactors[key]).toFixed(2);
    total += parseFloat(emission);
    let tr = document.createElement("tr");
    tr.innerHTML = `<td>${key}</td><td>${data[key]}</td><td>${emission}</td>`;
    detailsTbody.appendChild(tr);
  }

  document.getElementById("result").textContent = `總排放量：${total.toFixed(2)} KgCO₂e`;

  // 保存歷史
  const period = `${year}-${month.padStart(2,'0')}`;
  history = history.filter(h => h.period !== period);
  history.push({ period, total: total.toFixed(2) });
  history.sort((a,b)=> a.period.localeCompare(b.period));
  localStorage.setItem("co2History", JSON.stringify(history));

  updateHistoryTable();
  renderChart(data);
  renderHistoryChart();
}

function updateHistoryTable() {
  const tbody = document.querySelector("#historyTable tbody");
  tbody.innerHTML = "";
  history.forEach(h=>{
    const tr = document.createElement("tr");
    tr.innerHTML = `<td>${h.period}</td><td>${h.total}</td>`;
    tbody.appendChild(tr);
  });
}

function renderChart(data) {
  const ctx = document.getElementById("emissionChart").getContext("2d");
  if(window.emissionChart) window.emissionChart.destroy();
  window.emissionChart = new Chart(ctx, {
    type: "bar",
    data: {
      labels: Object.keys(data),
      datasets: [{
        label: "排放量 KgCO₂e",
        data: Object.keys(data).map(k => (data[k]*emissionFactors[k]).toFixed(2)),
        backgroundColor: "#3498db"
      }]
    },
    options: { responsive:true }
  });
}

function renderHistoryChart() {
  const ctx = document.getElementById("historyChartCanvas").getContext("2d");
  if(window.historyChart) window.historyChart.destroy();
  window.historyChart = new Chart(ctx, {
    type: "line",
    data: {
      labels: history.map(h=>h.period),
      datasets: [{
        label:"歷史總排放量",
        data: history.map(h=>h.total),
        fill:false,
        borderColor:"#27ae60",
        tension:0.2
      }]
    },
    options:{ responsive:true }
  });
}

// 匯出單月 Excel
function exportExcel() {
  const wb = XLSX.utils.book_new();
  const ws_data = [["項目","用量","排放量(KgCO2e)"]];
  const tbody = document.querySelector("#details tbody");
  tbody.querySelectorAll("tr").forEach(tr=>{
    ws_data.push(Array.from(tr.children).map(td=>td.textContent));
  });
  const ws = XLSX.utils.aoa_to_sheet(ws_data);
  XLSX.utils.book_append_sheet(wb, ws, "單月排放");
  XLSX.writeFile(wb, "CO2單月排放.xlsx");
}

// 匯出單月 PDF
function exportPDF() {
  const { jsPDF } = window.jspdf;
  const doc = new jsPDF();
  doc.text("單月 CO2 排放明細", 14, 20);
  doc.autoTable({ html: "#details", startY: 30 });
  doc.save("CO2單月排放.pdf");
}

// 匯出歷史 Excel
function exportHistoryExcel() {
  const wb = XLSX.utils.book_new();
  const ws_data = [["期間","總排放量(KgCO2e)"]];
  history.forEach(h=>ws_data.push([h.period,h.total]));
  const ws = XLSX.utils.aoa_to_sheet(ws_data);
  XLSX.utils.book_append_sheet(wb, ws, "歷史排放");
  XLSX.writeFile(wb, "CO2歷史排放.xlsx");
}

// 匯出歷史 PDF
function exportHistoryPDF() {
  const { jsPDF } = window.jspdf;
  const doc = new jsPDF();
  doc.text("歷史 CO2 排放記錄", 14, 20);
  doc.autoTable({
    head: [["期間","總排放量(KgCO2e)"]],
    body: history.map(h=>[h.period,h.total]),
    startY: 30
  });
  doc.save("CO2歷史排放.pdf");
}

// 匯入 Excel 歷史
function importHistoryExcel() {
  const file = document.getElementById("importFile").files[0];
  if(!file) return;
  const reader = new FileReader();
  reader.onload = function(e){
    const data = new Uint8Array(e.target.result);
    const workbook = XLSX.read(data, {type:"array"});
    const ws = workbook.Sheets[workbook.SheetNames[0]];
    const json = XLSX.utils.sheet_to_json(ws,{header:1});
    // 假設第一列是標題
    history = [];
    for(let i=1;i<json.length;i++){
      const row = json[i];
      if(row[0] && row[1]) history.push({period:row[0], total:row[1]});
    }
    history.sort((a,b)=> a.period.localeCompare(b.period));
    localStorage.setItem("co2History", JSON.stringify(history));
    updateHistoryTable();
    renderHistoryChart();
    alert("歷史資料匯入完成！");
  };
  reader.readAsArrayBuffer(file);
}

// 初始化
updateHistoryTable();
renderHistoryChart();
</script>

</body>
</html>
